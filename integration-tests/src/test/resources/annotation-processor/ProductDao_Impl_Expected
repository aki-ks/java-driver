package com.datastax.oss.driver.mapper.model.inventory;

import com.datastax.oss.driver.api.core.cql.BoundStatement;
import com.datastax.oss.driver.api.core.cql.BoundStatementBuilder;
import com.datastax.oss.driver.api.core.data.UdtValue;
import com.datastax.oss.driver.internal.core.util.concurrent.BlockingOperation;
import com.datastax.oss.driver.internal.core.util.concurrent.CompletableFutures;
import com.datastax.oss.driver.internal.mapper.MapperContext;
import java.lang.Override;
import java.util.concurrent.CompletableFuture;

/**
 * Generated by the DataStax driver mapper, do not edit directly.
 */
public class ProductDao_Impl implements ProductDao {
  private final MapperContext context;

  private final Dimensions_Helper dimensionsHelper;

  private final Product_Helper productHelper;

  private ProductDao_Impl(MapperContext context, Dimensions_Helper dimensionsHelper,
                          Product_Helper productHelper) {
    this.context = context;
    this.dimensionsHelper = dimensionsHelper;
    this.productHelper = productHelper;
  }

  public static CompletableFuture<ProductDao> initAsync(MapperContext context) {
    Dimensions_Helper dimensionsHelper = new Dimensions_Helper(context);
    Product_Helper productHelper = new Product_Helper(context);
    ProductDao_Impl dao = new ProductDao_Impl(context,
        dimensionsHelper,
        productHelper);
    return CompletableFuture.completedFuture(dao);
  }

  public static ProductDao init(MapperContext context) {
    BlockingOperation.checkNotDriverThread();
    return CompletableFutures.getUninterruptibly(initAsync(context));
  }

  @Override
  public BoundStatement set(Product product, BoundStatement boundStatement) {
    return productHelper.set(product, boundStatement);
  }

  @Override
  public void set(BoundStatementBuilder builder, Product product) {
    productHelper.set(product, builder);
  }

  @Override
  public void set(Dimensions dimensions, UdtValue udtValue) {
    dimensionsHelper.set(dimensions, udtValue);
  }
}
